# This is an example goreleaser.yaml file with some sane defaults.
# Make sure to check the documentation at http://goreleaser.com
before:
  hooks:
    # you may remove this if you don't use vgo
#    - go mod tidy
#    - go mod vendor
builds:
- main: ./cmd/frps/main.go
- env:
    - CGO_ENABLED=0
    - GO111MODULE=on
  goos:
    - linux
    - darwin
    - windows
  goarch:
    - 386
    - amd64
    - arm
    - arm64
    - mips64
    - mips64le
    - mips
    - mipsle
  gomips:
    - hardfloat
    - softfloat
  ignore:
    - goos: darwin
      goarch: 386
archives:
- replacements:
    darwin: Darwin
    linux: Linux
    windows: Windows
    386: i386
    amd64: x86_64
checksum:
  name_template: 'checksums.txt'
snapshot:
  name_template: "{{ .Tag }}-next"
changelog:
  sort: asc
  filters:
    exclude:
    - '^docs:'
    - '^test:'
brews:
  - github:
      owner: OpenIoTHub
      name: homebrew-tap
    folder: Formula
    homepage:  http://github.com/mDNSService
    description: Frp Server and Client
    test: |
      system "#{bin}/server-go -v"
scoop:
  bucket:
    owner: OpenIoTHub
    name: scoop-bucket
  homepage:  http://github.com/mDNSService
  description: Frp Server and Client.
  license: MIT
nfpms:
  - file_name_template: '{{ .ProjectName }}_{{ .Version }}_{{ .Os }}_{{ .Arch }}{{ if .Arm }}v{{ .Arm }}{{ end }}{{ if .Mips }}_{{ .Mips }}{{ end }}'
    homepage:  https://github.com/mDNSService
    description: Frp Server and Client
    maintainer: OpenIoTHub <newfarry@126.com>
    license: MIT
    vendor: server-go
    formats:
      - deb
      - rpm
snapcrafts:
  - name_template: '{{ .ProjectName }}_{{ .Version }}_{{ .Os }}_{{ .Arch }}{{ if .Arm }}v{{ .Arm }}{{ end }}{{ if .Mips }}_{{ .Mips }}{{ end }}'
    summary: Frp Server and Client.
    description: |
      Frp Server and Client
    grade: stable
#    confinement: classic
    publish: true
    apps:
      server-go:
        plugs: ["network", "network-bind"]
        daemon: simple
dockers:
  - image_templates:
      - 'openiothub/server-go:{{ .Tag }}'
      - 'openiothub/server-go:v{{ .Major }}.{{ .Minor }}'
      - 'openiothub/server-go:latest'
    dockerfile: Dockerfile
    binaries:
      - server-go
    build_flag_templates:
      - "--pull"
      - "--label=org.opencontainers.image.created={{.Date}}"
      - "--label=org.opencontainers.image.name={{.ProjectName}}"
      - "--label=org.opencontainers.image.revision={{.FullCommit}}"
      - "--label=org.opencontainers.image.version={{.Version}}"
      - "--label=org.opencontainers.image.source={{.GitURL}}"
      - "--label=com.github.actions.name={{.ProjectName}}"

    extra_files:
      - scripts/entrypoint.sh